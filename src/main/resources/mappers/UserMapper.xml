<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yhkim.fave.mappers.UserMapper">
    <insert id="insertUser" parameterType="com.yhkim.fave.entities.UserEntity" useGeneratedKeys="true" keyProperty="email">
        INSERT INTO `fave`.`users` (`email`, `password`, `nickname`, `contact`, `create_at`, `update_at`,
                                    `deleted_at`, `is_admin`, `is_suspended`, `is_verified`, `warning`, `oauth2_provider`, `oauth2_id`)
        VALUES (#{email}, #{password}, #{nickname}, #{contact}, #{createAt}, #{updateAt},
                #{deletedAt}, #{isAdmin}, #{isSuspended}, #{isVerified}, #{warning}, #{oauth2Provider}, #{oauth2Id})
    </insert>
    <select id="selectUserByEmail" resultMap="userResultMap">
        SELECT `email`, `password`, `nickname`, `contact`,
               `create_at` AS `createdAt`,
               `update_at` AS `updatedAt`,
               `deleted_at` AS `deletedAt`,
               `is_admin` AS `isAdmin`,
               `is_suspended` AS `isSuspended`,
               `is_verified` AS `isVerified`,
               `warning` AS `warning`,
               `oauth2_provider` AS `oauth2Provider`,
               `oauth2_id` AS `oauth2Id`
        FROM `fave`.`users`
        WHERE `email` = #{email}
        LIMIT 1
    </select>
    <resultMap id="userResultMap" type="com.yhkim.fave.entities.UserEntity">
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="contact" column="contact"/>
        <result property="createdAt" column="create_at"/>
        <result property="updatedAt" column="update_at"/>
        <result property="deletedAt" column="deleted_at"/>
        <result property="admin" column="is_admin"/>
        <result property="suspended" column="is_suspended"/>
        <result property="verified" column="is_verified"/>
        <result property="warning" column="warning"/>
        <result property="oauth2Provider" column="oauth2_provider"/>
        <result property="oauth2Id" column="oauth2_id"/>
    </resultMap>

    <select id="selectUserByContact" resultMap="userResultMap">
        SELECT `email`        AS `email`,
               `password`     AS `password`,
               `nickname`     AS `nickname`,
               `contact`      AS `contact`,
               `create_at`    AS `createAt`,
               `update_at`    AS `updateAt`,
               `deleted_at`   AS `deletedAt`,
               `is_admin`     AS `isAdmin`,
               `is_suspended` AS `isSuspended`,
               `is_verified`  AS `isVerified`,
               `warning`      AS `warning`,
               `oauth2_provider` AS `oauth2Provider`,
               `oauth2_id` AS `oauth2Id`
        FROM `fave`.`users`
        WHERE `contact` = #{contact}
        LIMIT 1
    </select>
    <select id="selectUserByNickname" resultType="com.yhkim.fave.entities.UserEntity">
        SELECT `email`        AS `email`,
               `password`     AS `password`,
               `nickname`     AS `nickname`,
               `contact`      AS `contact`,
               `create_at`    AS `createAt`,
               `update_at`    AS `updateAt`,
               `deleted_at`   AS `deletedAt`,
               `is_admin`     AS `isAdmin`,
               `is_suspended` AS `isSuspended`,
               `is_verified`  AS `isVerified`,
               `warning`      AS `warning`,
               `oauth2_provider` AS `oauth2Provider`,
               `oauth2_id` AS `oauth2Id`
        FROM `fave`.`users`
        WHERE `nickname` = #{nickname}
        LIMIT 1
    </select>

    <update id="updateUser" parameterType="com.yhkim.fave.entities.UserEntity">
        UPDATE `fave`.`users`
        <set>
            <if test="password != null">`password` = #{password},</if>
            <if test="nickname != null">`nickname` = #{nickname},</if>
            <if test="createAt != null">`create_at` = #{createAt},</if>
            <if test="updateAt != null">`update_at` = #{updateAt},</if>
            <if test="deletedAt != null">`deleted_at` = #{deletedAt},</if>
            <if test="isAdmin != null">`is_admin` = #{isAdmin},</if>
            <if test="isSuspended != null">`is_suspended` = #{isSuspended},</if>
            <if test="isVerified != null">`is_verified` = #{isVerified},</if>
            <if test="warning != null">`warning` = #{warning},</if>
            <if test="oauth2Provider != null">`oauth2_provider` = #{oauth2Provider},</if>
            <if test="oauth2Id != null">`oauth2_id` = #{oauth2Id},</if>
        </set>
        WHERE `email` = #{email}
        LIMIT 1
    </update>

    <!--  user 테이블에 있는 데이터 불러오기 -->
    <select id="selectAllUser" parameterType="com.yhkim.fave.entities.UserEntity"
            resultType="com.yhkim.fave.entities.UserEntity">
        SELECT `email`        AS `email`,
               `password`     AS `password`,
               `nickname`     AS `nickName`,
               `contact`      AS `contact`,
               `create_at`    AS `createdAt`,
               `update_at`    AS `updatedAt`,
               `deleted_at`   AS `deletedAt`,
               `is_admin`     AS `isAdmin`,
               `is_suspended` AS `isSuspended`,
               `is_verified`  AS `isVerified`,
               `warning`      AS `warning`
        FROM `fave`.`users`
        WHERE `deleted_at` IS NULL
          AND `is_suspended` = false
        ORDER BY `create_at` DESC
    </select>
    <!-- userEmail 이 동일한 데이터 불러오기 -->
    <!-- 경고 횟수 , 탈퇴 처리 업데이트 랑 연결-->
    <select id="selectUserByEmailAdmin" resultType="com.yhkim.fave.entities.UserEntity">
        SELECT `email`        AS `email`,
               `password`     AS `password`,
               `nickname`     AS `nickName`,
               `contact`      AS `contact`,
               `create_at`    AS `createdAt`,
               `update_at`    AS `updatedAt`,
               `deleted_at`   AS `deletedAt`,
               `is_admin`     AS `isAdmin`,
               `is_suspended` AS `isSuspended`,
               `is_verified`  AS `isVerified`,
               `warning`      AS `warning`
        FROM `fave`.`users`
        WHERE `email` = #{userEmail}
    </select>
    <!--  경고 횟수 업데이트 , 이메일 탈퇴 처리  -->
    <update id="updateWarning" parameterType="com.yhkim.fave.entities.UserEntity">
        UPDATE `fave`.`users`
        SET `deleted_at` = #{deletedAt},
            `is_suspended` = #{suspended},
            `warning`    = #{warning}
        WHERE `email` = #{email}
    </update>
    <!--  user 테이블 의 정보 개수  -->
    <select id="selectUserCount" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM `fave`.`users`
    </select>
    <!--    회원 관리 페이지 페이징  -->
    <select id="selectUserPage">
        SELECT `email`        AS `email`,
               `password`     AS `password`,
               `nickname`     AS `nickName`,
               `contact`      AS `contact`,
               `create_at`    AS `createdAt`,
               `update_at`    AS `updatedAt`,
               `deleted_at`   AS `deletedAt`,
               `is_admin`     AS `admin`,
               `is_suspended` AS `suspended`,
               `is_verified`  AS `verified`,
               `warning`      AS `warning`
        FROM `fave`.`users`
        WHERE `deleted_at` IS NULL
          AND `is_suspended` = false
        ORDER BY `create_at` DESC
        LIMIT #{limitCount} OFFSET #{offsetCount}
    </select>
    <select id="selectUserCountBySearch" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM `fave`.`users`
        <if test="filter.equals('email')">
            WHERE `email` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('nickname')">
            WHERE `nickname` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('contact')">
            WHERE `contact` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('verified')">
            WHERE `is_verified` = #{keyword}
        </if>
    </select>
    <select id="selectUserBySearch" resultType="com.yhkim.fave.entities.UserEntity" parameterType="com.yhkim.fave.entities.UserEntity">
        SELECT `email`        AS `email`,
        `password`     AS `password`,
        `nickname`     AS `nickName`,
        `contact`      AS `contact`,
        `create_at`    AS `createdAt`,
        `update_at`    AS `updatedAt`,
        `deleted_at`   AS `deletedAt`,
        `is_admin`     AS `isAdmin`,
        `is_suspended` AS `isSuspended`,
        `is_verified`  AS `isVerified`,
        `warning`      AS `warning`
        FROM `fave`.`users`
        WHERE `deleted_at` IS NULL
        AND `is_suspended` = false
        <if test="filter.equals('email')">
            AND `email` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('nickname')">
            AND `nickname` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('contact')">
            AND `contact` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('verified')">
            AND `is_verified` = #{keyword}
        </if>
        ORDER BY `create_at` DESC
        LIMIT #{limitCount} OFFSET #{offsetCount}
    </select>
</mapper>