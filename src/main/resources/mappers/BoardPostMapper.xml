<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yhkim.fave.mappers.BoardPostMapper">

    <select id="selectPostsByUserEmail" resultType="com.yhkim.fave.entities.BoardPostEntity">
        SELECT `index`,
               title,
               content,
               user_email    AS userEmail,
               user_nickname AS userNickname,
               create_at     AS createAt,
               update_at     AS updateAt,
               deleted_at    AS deletedAt,
               `view`        AS view,
               `like_count`  AS likeCount
        FROM fave.board_posts
        WHERE user_email = #{userEmail}
        ORDER BY create_at DESC
        LIMIT #{pageVo.offsetCount}, #{pageVo.countPerPage}
    </select>

    <select id="countPostsByUserEmail" resultType="int">
        SELECT COUNT(*)
        FROM fave.board_posts
        WHERE user_email = #{userEmail}
    </select>

    <!-- 김범수 -->
    <select id="selectBoardPosts" resultType="com.yhkim.fave.entities.BoardPostEntity"
            parameterType="com.yhkim.fave.entities.BoardPostEntity">
        SELECT `index`         AS `index`,
               `title`         AS `title`,
               `content`       AS `content`,
               `user_email`    AS `userEmail`,
               `user_nickname` AS `userNickName`,
               `create_at`     AS `createdAt`,
               `update_at`     AS `updatedAt`,
               `deleted_at`    AS `deletedAt`,
               `view`          AS `view`,
               `like_count`    AS likeCount

        FROM `fave`.`board_posts`
        WHERE `deleted_at` IS NULL
        ORDER BY `index` DESC
    </select>

    <select id="selectBoardPostCount" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM `fave`.`board_posts`
    </select>
    <select id="selectBoardPost" resultType="com.yhkim.fave.entities.BoardPostEntity"
            parameterType="com.yhkim.fave.entities.BoardPostEntity">
        SELECT `index`         AS `index`,
               `title`         AS `title`,
               `content`       AS `content`,
               `user_email`    AS `userEmail`,
               `user_nickname` AS `userNickName`,
               `create_at`     AS `createAt`,
               `update_at`     AS `updatedAt`,
               `deleted_at`    AS `deletedAt`,
               `view`          AS `view`,
               `like_count`    AS likeCount
        FROM `fave`.`board_posts`
        WHERE `deleted_at` IS NULL
        ORDER BY `index` DESC
        LIMIT #{limitCount} OFFSET #{offsetCount}
    </select>
    <select id="selectBoardPostCountBySearch" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM `fave`.`board_posts`
        <if test="filter.equals('all')">
            WHERE `title` LIKE CONCAT('%', #{keyword}, '%') OR `content` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('title')">
            WHERE `title` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('content')">
            WHERE `content` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('nickname')">
            WHERE `user_nickname` LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </select>
    <select id="selectBoardPostBySearch" resultType="com.yhkim.fave.entities.BoardPostEntity"
            parameterType="com.yhkim.fave.entities.BoardPostEntity">
        SELECT `index` AS `index`,
        `title` AS `title`,
        `content` AS `content`,
        `user_email` AS `userEmail`,
        `user_nickname` AS `userNickName`,
        `create_at` AS `createdAt`,
        `update_at` AS `updatedAt`,
        `deleted_at` AS `deletedAt`,
        `view` AS `view`,
        `like_count` AS likeCount
        FROM `fave`.`board_posts`
        WHERE `deleted_at` IS NULL
        <if test="filter.equals('all')">
            AND `title` LIKE CONCAT('%', #{keyword}, '%') OR `content` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('title')">
            AND `title` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('content')">
            AND `content` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="filter.equals('nickname')">
            AND `user_nickname` LIKE CONCAT('%', #{keyword}, '%')
        </if>
        ORDER BY `index` DESC
        LIMIT #{limitCount} OFFSET #{offsetCount}
    </select>
    <select id="selectBoardPostsByIndex" resultType="com.yhkim.fave.entities.BoardPostEntity">
        SELECT `index`         AS `index`,
               `title`         AS `title`,
               `content`       AS `content`,
               `user_email`    AS `userEmail`,
               `user_nickname` AS `userNickName`,
               `create_at`     AS `createdAt`,
               `update_at`     AS `updatedAt`,
               `deleted_at`    AS `deletedAt`,
               `view`          AS `view`,
               `like_count`    AS likeCount
        FROM `fave`.`board_posts`
        WHERE `index` = #{index}
    </select>
    <update id="updateBoardPost" parameterType="com.yhkim.fave.entities.BoardPostEntity">
        UPDATE `fave`.`board_posts`
        SET `deleted_at` = #{deletedAt}
        WHERE `index` = #{index}
    </update>

<!--    김창윤-->

    <insert id="addLike">
        INSERT INTO `fave`.`board_likes` (`board_id`, `user_email`)
        VALUES (#{postId}, #{userEmail})
    </insert>

    <!-- 좋아요 삭제 -->
    <delete id="removeLike">
        DELETE FROM `fave`.`board_likes`
        WHERE `board_id` = #{postId} AND `user_email` = #{userEmail}
    </delete>

    <!-- 좋아요 수 증가 -->
    <update id="incrementLikeCount">
        UPDATE `fave`.`board_posts`
        SET like_count = like_count + 1
        WHERE `index` = #{postId}
    </update>

    <!-- 좋아요 수 감소 -->
    <update id="decrementLikeCount">
        UPDATE `fave`.`board_posts`
        SET like_count = like_count - 1
        WHERE `index` = #{postId}
    </update>

    <select id="isLiked" resultType="java.lang.Boolean">
        SELECT COUNT(*) > 0
        FROM `fave`.`board_likes`
        WHERE `board_id` = #{postId}
          AND `user_email` = #{userEmail}
    </select>

    <select id="getLikeCount" resultType="java.lang.Integer">
        SELECT `like_count`
        FROM `fave`.`board_posts`
        WHERE `index` = #{postId}
    </select>

</mapper>